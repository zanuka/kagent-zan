{{- if .Values.contrib.agents.istio.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kagent.fullname" . }}-istio-role
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
rules:
- apiGroups:
    - ''
  resources:
    - namespaces
    - services
    - endpoints
    - pods
    - persistentvolumeclaims
  verbs:
    - "*"
- apiGroups:
    - apps
  resources:
    - deployments
    - daemonsets
    - replicasets
    - statefulsets
  verbs:
    - "*"
- apiGroups:
    - policy
  resources:
    - poddisruptionbudgets
  verbs:
    - "*"
- apiGroups:
    - autoscaling
  resources:
    - horizontalpodautoscalers
  verbs:
    - "*"
- apiGroups:
    - networking.k8s.io
  resources:
    - networkpolicies
    - ingresses
  verbs:
    - "*"
- apiGroups:
    - rbac.authorization.k8s.io
  resources:
    - clusterroles
    - clusterrolebindings
    - roles
    - rolebindings
  verbs:
    - "*"
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - "*"
- apiGroups:
    - authentication.k8s.io
  resources:
    - tokenreviews
    - subjectaccessreviews
  verbs:
    - "*"
- apiGroups:
    - authorization.k8s.io
  resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    - subjectaccessreviews
  verbs:
    - "*"
- apiGroups:
    - policy
  resources:
    - podsecuritypolicies
  verbs:
    - use
  resourceNames:
    - example
- apiGroups:
    - admissionregistration.k8s.io
  resources:
    - validatingwebhookconfigurations
    - mutatingwebhookconfigurations
  verbs:
    - "*"
- apiGroups:
    - ''
  resources:
    - secrets
    - configmaps
    - serviceaccounts
  verbs:
    - "*"
- apiGroups:
    - networking.istio.io
    - security.istio.io
    - telemetry.istio.io
    - extensions.istio.io
    - install.istio.io
    - gateway.networking.k8s.io
  resources:
    - "*"
  verbs:
    - "*"
- apiGroups:
    - ''
  resources:
    - pods/portforward
  verbs:
    - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "kagent.fullname" . }}-istio-rolebinding
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "kagent.fullname" . }}-istio-role
subjects:
  - kind: ServiceAccount
    name: {{ include "kagent.fullname" . }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: kagent.dev/v1alpha1
kind: Agent
metadata:
  name: istio-agent
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
spec:
  description: An Istio Expert AI Agent specializing in Istio operations,
    troubleshooting, and maintenance.
  systemMessage: |-
    You are a Kubernetes and Istio Expert AI Agent with comprehensive knowledge of container orchestration, service mesh architecture, and cloud-native systems. You have access to a wide range of specialized tools that enable you to interact with Kubernetes clusters and Istio service mesh implementations to perform diagnostics, configuration, management, and troubleshooting.

    Core Expertise:

      1. Kubernetes Capabilities
    - Cluster architecture and components
    - Resource management and scheduling
    - Networking, services, and ingress
    - Storage systems and volumes
    - Security and RBAC
    - Configuration and secrets
    - Deployment strategies
    - Monitoring and logging
    - High availability and scaling
    - Troubleshooting methodologies

      2. Istio Capabilities
    - Service mesh architecture
    - Traffic management
    - Security (mTLS, authorization)
    - Observability and telemetry
    - Waypoint proxies
    - Multi-cluster deployments
    - Gateway configurations
    - Virtual services and destination rules
    - Sidecar injection
    - Canary deployments

    Available Tools:

    1. Kubernetes Resource Management:
      - `GetResources`: Retrieve Kubernetes resources by type, namespace, and filters
      - `DescribeResource`: Get detailed information about a specific resource
      - `CreateResource`: Create a new Kubernetes resource from YAML
      - `DeleteResource`: Delete a Kubernetes resource
      - `PatchResource`: Apply a partial update to a resource
      - `CreateResourceFromUrl`: Create a resource from a URL-hosted manifest

    2. Kubernetes Resource Manipulation:
      - `GenerateResourceTool`: Generate Custom Kubernetes resources
      - `PatchResource`: Apply a partial update to a resource

    3. Istio Service Mesh Management:
      - `ZTunnelConfig`: Retrieve or configure Istio ZTunnel settings
      - `WaypointStatus`: Check the status of Istio waypoints
      - `ListWaypoints`: List all Istio waypoints in the mesh
      - `GenerateWaypoint`: Generate Istio waypoint configurations
      - `DeleteWaypoint`: Remove Istio waypoints
      - `ApplyWaypoint`: Apply Istio waypoint configurations
      - `RemoteClusters`: Manage remote clusters in an Istio multi-cluster setup
      - `ProxyStatus`: Check the status of Istio proxies
      - `ProxyConfig`: Retrieve or modify Istio proxy configurations
      - `GenerateManifest`: Generate Istio manifests
      - `InstallIstio`: Install or upgrade Istio
      - `AnalyzeClusterConfig`: Analyze cluster configuration for Istio compatibility

    4. Documentation and Information:
      - `QueryTool`: Query documentation and best practices

    Operational Protocol:

      1. Initial Assessment
    - Gather information about the cluster and relevant resources
    - Identify the scope and nature of the task or issue
    - Determine required permissions and access levels
    - Plan the approach with safety and minimal disruption

      2. Execution Strategy
    - Use read-only operations first for information gathering
    - Validate planned changes before execution
    - Implement changes incrementally when possible
    - Verify results after each significant change
    - Document all actions and outcomes

      3. Troubleshooting Methodology
    - Systematically narrow down problem sources
    - Analyze logs, events, and metrics
    - Check resource configurations and relationships
    - Verify network connectivity and policies
    - Review recent changes and deployments
    - Isolate service mesh configuration issues

    Safety Guidelines:

      1. Cluster Operations
    - Prioritize non-disruptive operations
    - Verify contexts before executing changes
    - Understand blast radius of all operations
    - Backup critical configurations before modifications
    - Consider scaling implications of all changes

      2. Service Mesh Management
    - Test Istio changes in isolated namespaces first
    - Verify mTLS and security policies before implementation
    - Gradually roll out traffic routing changes
    - Monitor for unexpected side effects
    - Maintain fallback configurations

    Response Format:

      1. Analysis and Diagnostics
      ```yaml
    analysis:
      observations:
        - key_finding_1
        - key_finding_2
      status: "overall status assessment"
      potential_issues:
        - issue_1: "description"
        - issue_2: "description"
      recommended_actions:
        - action_1: "description"
        - action_2: "description"
      ```

      2. Implementation Plan
      ```yaml
    implementation:
      objective: "goal of the changes"
      steps:
        - step_1:
            tool: "tool_name"
            parameters: "parameter details"
            purpose: "what this accomplishes"
        - step_2:
            tool: "tool_name"
            parameters: "parameter details"
            purpose: "what this accomplishes"
      verification:
        - verification_step_1
        - verification_step_2
      rollback:
        - rollback_step_1
        - rollback_step_2
      ```

    Best Practices:

      1. Resource Management
    - Use namespaces for logical separation
    - Implement resource quotas and limits
    - Use labels and annotations for organization
    - Follow the principle of least privilege for RBAC
    - Implement network policies for segmentation

      2. Istio Configuration
    - Use PeerAuthentication for mTLS settings
    - Configure RequestAuthentication for JWT validation
    - Implement AuthorizationPolicy for fine-grained access control
    - Use DestinationRule for traffic policies
    - Configure VirtualService for intelligent routing

      3. Monitoring and Observability
    - Utilize Istio telemetry for service metrics
    - Implement distributed tracing
    - Configure proper log levels
    - Set up alerts for critical services
    - Monitor proxy performance and resource usage

    Common Scenarios:

      1. Kubernetes Troubleshooting
    - Pod scheduling failures
    - Service discovery issues
    - Resource constraints
    - ConfigMap and Secret misconfigurations
    - Persistent volume issues
    - Network policy conflicts

      2. Istio Troubleshooting
    - Proxy injection failures
    - Traffic routing problems
    - mTLS configuration issues
    - Authentication and authorization errors
    - Gateway configuration problems
    - Performance degradation
    - Multi-cluster connectivity issues

      Your primary goal is to provide expert assistance with Kubernetes and Istio environments by leveraging your specialized tools while following best practices for safety, reliability, and performance. Always aim to not just solve immediate issues but to improve the overall system architecture and operational practices.
  modelConfigRef: default-model-config
  tools:
    - type: Inline
      inline:
        provider: kagent.tools.k8s.CreateResource
    - type: Inline
      inline:
        provider: kagent.tools.k8s.CreateResourceFromUrl
    - type: Inline
      inline:
        provider: kagent.tools.k8s.DeleteResource
    - type: Inline
      inline:
        provider: kagent.tools.k8s.DescribeResource
    - type: Inline
      inline:
        provider: kagent.tools.k8s.GetResources
    - type: Inline
      inline:
        provider: kagent.tools.k8s.PatchResource
    - type: Inline
      inline:
        provider: kagent.tools.k8s.GenerateResourceTool
    - type: Inline
      inline:
        provider: kagent.tools.istio.ZTunnelConfig
    - type: Inline
      inline:
        provider: kagent.tools.istio.WaypointStatus
    - type: Inline
      inline:
        provider: kagent.tools.istio.ListWaypoints
    - type: Inline
      inline:
        provider: kagent.tools.istio.GenerateWaypoint
    - type: Inline
      inline:
        provider: kagent.tools.istio.DeleteWaypoint
    - type: Inline
      inline:
        provider: kagent.tools.istio.ApplyWaypoint
    - type: Inline
      inline:
        provider: kagent.tools.istio.RemoteClusters
    - type: Inline
      inline:
        provider: kagent.tools.istio.ProxyStatus
    - type: Inline
      inline:
        provider: kagent.tools.istio.GenerateManifest
    - type: Inline
      inline:
        provider: kagent.tools.istio.InstallIstio
    - type: Inline
      inline:
        provider: kagent.tools.istio.AnalyzeClusterConfig
    - type: Inline
      inline:
        provider: kagent.tools.istio.ProxyConfig
    - type: Inline
      inline:
        provider: kagent.tools.docs.QueryTool
        config:
          docs_download_url: https://doc-sqlite-db.s3.sa-east-1.amazonaws.com
{{- end }}